<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="all" targetNamespace="http://tempuri.org/all.xsd" xmlns:mstns="http://tempuri.org/all.xsd" xmlns="http://tempuri.org/all.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PayrollDbContext" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PayrollDbContext (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Nomina.Properties.Settings.GlobalReference.Default.PayrollDbContext" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentsTableAdapter" GeneratorDataComponentClassName="DepartmentsTableAdapter" Name="Departments" UserDataComponentName="DepartmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Departments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Departments] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Departments] ([Name], [Location]) VALUES (@Name, @Location);
SELECT Id, Name, Location FROM Departments WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Location FROM dbo.Departments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Departments] SET [Name] = @Name, [Location] = @Location WHERE (([Id] = @Original_Id));
SELECT Id, Name, Location FROM Departments WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Departments" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Location" DataSetColumn="Location" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeesTableAdapter" GeneratorDataComponentClassName="EmployeesTableAdapter" Name="Employees" UserDataComponentName="EmployeesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Employees" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employees] WHERE (([Id] = @Original_Id) AND ([Salary] = @Original_Salary) AND ([Position_Id] = @Original_Position_Id) AND ([Department_Id] = @Original_Department_Id) AND ([Payroll_Id] = @Original_Payroll_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Position_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Position_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Department_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Payroll_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employees] ([Cedula], [Name], [Salary], [Position_Id], [Department_Id], [Payroll_Id]) VALUES (@Cedula, @Name, @Salary, @Position_Id, @Department_Id, @Payroll_Id);
SELECT Id, Cedula, Name, Salary, Position_Id, Department_Id, Payroll_Id FROM Employees WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Cedula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Cedula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Position_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Position_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Department_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Payroll_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Cedula, Name, Salary, Position_Id, Department_Id, Payroll_Id FROM dbo.Employees</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employees] SET [Cedula] = @Cedula, [Name] = @Name, [Salary] = @Salary, [Position_Id] = @Position_Id, [Department_Id] = @Department_Id, [Payroll_Id] = @Payroll_Id WHERE (([Id] = @Original_Id) AND ([Salary] = @Original_Salary) AND ([Position_Id] = @Original_Position_Id) AND ([Department_Id] = @Original_Department_Id) AND ([Payroll_Id] = @Original_Payroll_Id));
SELECT Id, Cedula, Name, Salary, Position_Id, Department_Id, Payroll_Id FROM Employees WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Cedula" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Cedula" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Position_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Position_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Department_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Payroll_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Position_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Position_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Department_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Payroll_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Cedula" DataSetColumn="Cedula" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Salary" DataSetColumn="Salary" />
              <Mapping SourceColumn="Position_Id" DataSetColumn="Position_Id" />
              <Mapping SourceColumn="Department_Id" DataSetColumn="Department_Id" />
              <Mapping SourceColumn="Payroll_Id" DataSetColumn="Payroll_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PayrollsTableAdapter" GeneratorDataComponentClassName="PayrollsTableAdapter" Name="Payrolls" UserDataComponentName="PayrollsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Payrolls" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Payrolls] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Payrolls] ([Name], [Periocity]) VALUES (@Name, @Periocity);
SELECT Id, Name, Periocity FROM Payrolls WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Periocity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Periocity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Periocity FROM dbo.Payrolls</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Payrolls] SET [Name] = @Name, [Periocity] = @Periocity WHERE (([Id] = @Original_Id));
SELECT Id, Name, Periocity FROM Payrolls WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Periocity" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Periocity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Payrolls" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Periocity" DataSetColumn="Periocity" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PositionsTableAdapter" GeneratorDataComponentClassName="PositionsTableAdapter" Name="Positions" UserDataComponentName="PositionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Positions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Positions] WHERE (([Id] = @Original_Id) AND ([MinSalary] = @Original_MinSalary) AND ([MaxSalary] = @Original_MaxSalary))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MinSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MinSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MaxSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MaxSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Positions] ([Name], [RiskLevel], [MinSalary], [MaxSalary]) VALUES (@Name, @RiskLevel, @MinSalary, @MaxSalary);
SELECT Id, Name, RiskLevel, MinSalary, MaxSalary FROM Positions WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RiskLevel" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RiskLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MinSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MinSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MaxSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MaxSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, RiskLevel, MinSalary, MaxSalary FROM dbo.Positions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Positions] SET [Name] = @Name, [RiskLevel] = @RiskLevel, [MinSalary] = @MinSalary, [MaxSalary] = @MaxSalary WHERE (([Id] = @Original_Id) AND ([MinSalary] = @Original_MinSalary) AND ([MaxSalary] = @Original_MaxSalary));
SELECT Id, Name, RiskLevel, MinSalary, MaxSalary FROM Positions WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RiskLevel" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RiskLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MinSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MinSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@MaxSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MaxSalary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MinSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MinSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_MaxSalary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="MaxSalary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Positions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="RiskLevel" DataSetColumn="RiskLevel" />
              <Mapping SourceColumn="MinSalary" DataSetColumn="MinSalary" />
              <Mapping SourceColumn="MaxSalary" DataSetColumn="MaxSalary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([Name], [Description]) VALUES (@Name, @Description);
SELECT Id, Name, Description FROM Roles WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Description FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [Name] = @Name, [Description] = @Description WHERE (([Id] = @Original_Id));
SELECT Id, Name, Description FROM Roles WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionsTableAdapter" GeneratorDataComponentClassName="TransactionsTableAdapter" Name="Transactions" UserDataComponentName="TransactionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Transactions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Transactions] WHERE (([Id] = @Original_Id) AND ([Date] = @Original_Date) AND ([Amount] = @Original_Amount) AND ([TransactionType_Id] = @Original_TransactionType_Id) AND ([Employee_Id] = @Original_Employee_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionType_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionType_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Employee_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Transactions] ([Date], [Amount], [Status], [TransactionType_Id], [Employee_Id], [Group]) VALUES (@Date, @Amount, @Status, @TransactionType_Id, @Employee_Id, @Group);
SELECT Id, Date, Amount, Status, TransactionType_Id, Employee_Id, [Group] FROM Transactions WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionType_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionType_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Employee_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Date, Amount, Status, TransactionType_Id, Employee_Id, [Group] FROM dbo.Transactions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Transactions] SET [Date] = @Date, [Amount] = @Amount, [Status] = @Status, [TransactionType_Id] = @TransactionType_Id, [Employee_Id] = @Employee_Id, [Group] = @Group WHERE (([Id] = @Original_Id) AND ([Date] = @Original_Date) AND ([Amount] = @Original_Amount) AND ([TransactionType_Id] = @Original_TransactionType_Id) AND ([Employee_Id] = @Original_Employee_Id));
SELECT Id, Date, Amount, Status, TransactionType_Id, Employee_Id, [Group] FROM Transactions WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionType_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionType_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Employee_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Group" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionType_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionType_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Employee_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
              <Mapping SourceColumn="TransactionType_Id" DataSetColumn="TransactionType_Id" />
              <Mapping SourceColumn="Employee_Id" DataSetColumn="Employee_Id" />
              <Mapping SourceColumn="Group" DataSetColumn="Group" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionTypesTableAdapter" GeneratorDataComponentClassName="TransactionTypesTableAdapter" Name="TransactionTypes" UserDataComponentName="TransactionTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.TransactionTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionTypes] WHERE (([Id] = @Original_Id) AND ([isIncome] = @Original_isIncome))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionTypes] ([Name], [SalaryDependent], [Status], [isIncome]) VALUES (@Name, @SalaryDependent, @Status, @isIncome);
SELECT Id, Name, SalaryDependent, Status, isIncome FROM TransactionTypes WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SalaryDependent" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SalaryDependent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, SalaryDependent, Status, isIncome FROM dbo.TransactionTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionTypes] SET [Name] = @Name, [SalaryDependent] = @SalaryDependent, [Status] = @Status, [isIncome] = @isIncome WHERE (([Id] = @Original_Id) AND ([isIncome] = @Original_isIncome));
SELECT Id, Name, SalaryDependent, Status, isIncome FROM TransactionTypes WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SalaryDependent" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SalaryDependent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.TransactionTypes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="SalaryDependent" DataSetColumn="SalaryDependent" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
              <Mapping SourceColumn="isIncome" DataSetColumn="isIncome" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserRoleTableAdapter" GeneratorDataComponentClassName="UserRoleTableAdapter" Name="UserRole" UserDataComponentName="UserRoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.UserRole" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserRole] WHERE (([UserRole_Role_Id] = @Original_UserRole_Role_Id) AND ([Roles_Id] = @Original_Roles_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserRole_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserRole_Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserRole] ([UserRole_Role_Id], [Roles_Id]) VALUES (@UserRole_Role_Id, @Roles_Id);
SELECT UserRole_Role_Id, Roles_Id FROM UserRole WHERE (Roles_Id = @Roles_Id) AND (UserRole_Role_Id = @UserRole_Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserRole_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserRole_Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserRole_Role_Id, Roles_Id FROM dbo.UserRole</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserRole] SET [UserRole_Role_Id] = @UserRole_Role_Id, [Roles_Id] = @Roles_Id WHERE (([UserRole_Role_Id] = @Original_UserRole_Role_Id) AND ([Roles_Id] = @Original_Roles_Id));
SELECT UserRole_Role_Id, Roles_Id FROM UserRole WHERE (Roles_Id = @Roles_Id) AND (UserRole_Role_Id = @UserRole_Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserRole_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserRole_Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserRole_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserRole_Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Roles_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Roles_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserRole_Role_Id" DataSetColumn="UserRole_Role_Id" />
              <Mapping SourceColumn="Roles_Id" DataSetColumn="Roles_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectName="[payroll-unapec].dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([name], [password]) VALUES (@name, @password);
SELECT Id, name, password FROM Users WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, name, password FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [name] = @name, [password] = @password WHERE (([Id] = @Original_Id));
SELECT Id, name, password FROM Users WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[payroll-unapec].dbo.Users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTableReportTableAdapter" GeneratorDataComponentClassName="DataTableReportTableAdapter" Name="DataTableReport" UserDataComponentName="DataTableReportTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByTransactionTypeWithAllEmployeesAndPayrolls" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByTransactionTypeWithAllEmployeesAndPayrolls" GeneratorSourceName="FillByTransactionTypeWithAllEmployeesAndPayrolls" GetMethodModifier="Public" GetMethodName="GetDataByTransactionTypeWithAllEmployeesAndPayrolls" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByTransactionTypeWithAllEmployeesAndPayrolls" UserSourceName="FillByTransactionTypeWithAllEmployeesAndPayrolls">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where isIncome in (@isIncomeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="isIncomeID" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Boolean" Direction="Input" ParameterName="@isIncomeID" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Tipo_Transaction" DataSetColumn="Tipo_Transaction" />
              <Mapping SourceColumn="Empleado" DataSetColumn="Empleado" />
              <Mapping SourceColumn="Nombre_Transaction" DataSetColumn="Nombre_Transaction" />
              <Mapping SourceColumn="Monto" DataSetColumn="Monto" />
              <Mapping SourceColumn="Fecha" DataSetColumn="Fecha" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillAll" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetAllData" GeneratorSourceName="FillAll" GetMethodModifier="Public" GetMethodName="GetAllData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAllData" UserSourceName="FillAll">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEmpIDAndPayrollIDWithAllTransactionTypes" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmpIDAndPayrollIDWithAllTransactionTypes" GeneratorSourceName="FillByEmpIDAndPayrollIDWithAllTransactionTypes" GetMethodModifier="Public" GetMethodName="GetDataByEmpIDAndPayrollIDWithAllTransactionTypes" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmpIDAndPayrollIDWithAllTransactionTypes" UserSourceName="FillByEmpIDAndPayrollIDWithAllTransactionTypes">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where tr.Employee_Id = @empId and em.Payroll_Id = @payrollId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="empId" ColumnName="Employee_Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@empId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payrollId" ColumnName="Payroll_Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payrollId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEmpIdAndTransactionTypeAndPayrollId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmpIdAndTransactionTypeAndPayrollId" GeneratorSourceName="FillByEmpIdAndTransactionTypeAndPayrollId" GetMethodModifier="Public" GetMethodName="GetDataByEmpIdAndTransactionTypeAndPayrollId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmpIdAndTransactionTypeAndPayrollId" UserSourceName="FillByEmpIdAndTransactionTypeAndPayrollId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where tr.Employee_Id = @empId and trt.isIncome = @isIncome and  em.Payroll_Id = @payrollId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="empId" ColumnName="Employee_Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@empId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="isIncome" ColumnName="isIncome" DataSourceName="[payroll-unapec].dbo.TransactionTypes" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payrollId" ColumnName="Payroll_Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payrollId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEmpIdAndTransactionTypeWithAllPayrolls" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmpIdAndIsIncomeWithAllPayrolls" GeneratorSourceName="FillByEmpIdAndTransactionTypeWithAllPayrolls" GetMethodModifier="Public" GetMethodName="GetDataByEmpIdAndIsIncomeWithAllPayrolls" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmpIdAndIsIncomeWithAllPayrolls" UserSourceName="FillByEmpIdAndTransactionTypeWithAllPayrolls">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where isIncome  = @isIncome and Employee_Id = @empID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="isIncome" ColumnName="isIncome" DataSourceName="[payroll-unapec].dbo.TransactionTypes" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="empID" ColumnName="Employee_Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@empID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEmpIDWithAllTransactionTypesAndPayrolls" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmpIDWithAllTransactionTypes" GeneratorSourceName="FillByEmpIDWithAllTransactionTypesAndPayrolls" GetMethodModifier="Public" GetMethodName="GetDataByEmpIDWithAllTransactionTypes" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmpIDWithAllTransactionTypes" UserSourceName="FillByEmpIDWithAllTransactionTypesAndPayrolls">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where Employee_Id = @empID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="empID" ColumnName="Employee_Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@empID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEmployeeIDAndTransactionTypeAndPayrollID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByByEmployeeIDAndTransactionTypeAndPayrollID" GeneratorSourceName="FillByEmployeeIDAndTransactionTypeAndPayrollID" GetMethodModifier="Public" GetMethodName="GetDataByByEmployeeIDAndTransactionTypeAndPayrollID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByByEmployeeIDAndTransactionTypeAndPayrollID" UserSourceName="FillByEmployeeIDAndTransactionTypeAndPayrollID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where Employee_id = @empID and isIncome = @isIncome and Payroll_id = @payrollID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="empID" ColumnName="Employee_Id" DataSourceName="[payroll-unapec].dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@empID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Employee_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="isIncome" ColumnName="isIncome" DataSourceName="[payroll-unapec].dbo.TransactionTypes" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payrollID" ColumnName="Payroll_Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payrollID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPayrollIDWithAllEmployeeAndTransactionTypes" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByPayrollIDWithAllEmployeeAndTransactionTypes" GeneratorSourceName="FillByPayrollIDWithAllEmployeeAndTransactionTypes" GetMethodModifier="Public" GetMethodName="GetDataByPayrollIDWithAllEmployeeAndTransactionTypes" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByPayrollIDWithAllEmployeeAndTransactionTypes" UserSourceName="FillByPayrollIDWithAllEmployeeAndTransactionTypes">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where Payroll_Id = @payrollID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="payrollID" ColumnName="Payroll_Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payrollID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="PayrollDbContext (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByTransactionTypeAndPayrollIdWithAllEmployees" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByTransactionTypeAndPayrollIdWithAllEmployees" GeneratorSourceName="FillByTransactionTypeAndPayrollIdWithAllEmployees" GetMethodModifier="Public" GetMethodName="GetDataByTransactionTypeAndPayrollIdWithAllEmployees" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByTransactionTypeAndPayrollIdWithAllEmployees" UserSourceName="FillByTransactionTypeAndPayrollIdWithAllEmployees">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>select em.Name as Empleado, trt.Name as Nombre_Transaction, tr.Amount as Monto,
case when trt.isIncome = 1 then 'INGRESO' else 'DEDUCCION' end as Tipo_Transaction,
tr.[Group] as Fecha
from Employees em
join Transactions tr on tr.Employee_Id = em.Id
join TransactionTypes trt on tr.TransactionType_Id = trt.Id
where  trt.isIncome = @isIncome and em.Payroll_Id = @payrollId </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="isIncome" ColumnName="isIncome" DataSourceName="[payroll-unapec].dbo.TransactionTypes" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@isIncome" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="isIncome" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="payrollId" ColumnName="Payroll_Id" DataSourceName="[payroll-unapec].dbo.Employees" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@payrollId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Payroll_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="all" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="all" msprop:Generator_UserDSName="all">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Departments" msprop:Generator_TableClassName="DepartmentsDataTable" msprop:Generator_TableVarName="tableDepartments" msprop:Generator_TablePropName="Departments" msprop:Generator_RowDeletingName="DepartmentsRowDeleting" msprop:Generator_RowChangingName="DepartmentsRowChanging" msprop:Generator_RowEvHandlerName="DepartmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmentsRowDeleted" msprop:Generator_UserTableName="Departments" msprop:Generator_RowChangedName="DepartmentsRowChanged" msprop:Generator_RowEvArgName="DepartmentsRowChangeEvent" msprop:Generator_RowClassName="DepartmentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Location" msprop:Generator_ColumnVarNameInTable="columnLocation" msprop:Generator_ColumnPropNameInRow="Location" msprop:Generator_ColumnPropNameInTable="LocationColumn" msprop:Generator_UserColumnName="Location">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employees" msprop:Generator_TableClassName="EmployeesDataTable" msprop:Generator_TableVarName="tableEmployees" msprop:Generator_TablePropName="Employees" msprop:Generator_RowDeletingName="EmployeesRowDeleting" msprop:Generator_RowChangingName="EmployeesRowChanging" msprop:Generator_RowEvHandlerName="EmployeesRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeesRowDeleted" msprop:Generator_UserTableName="Employees" msprop:Generator_RowChangedName="EmployeesRowChanged" msprop:Generator_RowEvArgName="EmployeesRowChangeEvent" msprop:Generator_RowClassName="EmployeesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Cedula" msprop:Generator_ColumnVarNameInTable="columnCedula" msprop:Generator_ColumnPropNameInRow="Cedula" msprop:Generator_ColumnPropNameInTable="CedulaColumn" msprop:Generator_UserColumnName="Cedula">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Salary" msprop:Generator_ColumnVarNameInTable="columnSalary" msprop:Generator_ColumnPropNameInRow="Salary" msprop:Generator_ColumnPropNameInTable="SalaryColumn" msprop:Generator_UserColumnName="Salary" type="xs:double" />
              <xs:element name="Position_Id" msprop:Generator_ColumnVarNameInTable="columnPosition_Id" msprop:Generator_ColumnPropNameInRow="Position_Id" msprop:Generator_ColumnPropNameInTable="Position_IdColumn" msprop:Generator_UserColumnName="Position_Id" type="xs:int" />
              <xs:element name="Department_Id" msprop:Generator_ColumnVarNameInTable="columnDepartment_Id" msprop:Generator_ColumnPropNameInRow="Department_Id" msprop:Generator_ColumnPropNameInTable="Department_IdColumn" msprop:Generator_UserColumnName="Department_Id" type="xs:int" />
              <xs:element name="Payroll_Id" msprop:Generator_ColumnVarNameInTable="columnPayroll_Id" msprop:Generator_ColumnPropNameInRow="Payroll_Id" msprop:Generator_ColumnPropNameInTable="Payroll_IdColumn" msprop:Generator_UserColumnName="Payroll_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Payrolls" msprop:Generator_TableClassName="PayrollsDataTable" msprop:Generator_TableVarName="tablePayrolls" msprop:Generator_TablePropName="Payrolls" msprop:Generator_RowDeletingName="PayrollsRowDeleting" msprop:Generator_RowChangingName="PayrollsRowChanging" msprop:Generator_RowEvHandlerName="PayrollsRowChangeEventHandler" msprop:Generator_RowDeletedName="PayrollsRowDeleted" msprop:Generator_UserTableName="Payrolls" msprop:Generator_RowChangedName="PayrollsRowChanged" msprop:Generator_RowEvArgName="PayrollsRowChangeEvent" msprop:Generator_RowClassName="PayrollsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Periocity" msprop:Generator_ColumnVarNameInTable="columnPeriocity" msprop:Generator_ColumnPropNameInRow="Periocity" msprop:Generator_ColumnPropNameInTable="PeriocityColumn" msprop:Generator_UserColumnName="Periocity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Positions" msprop:Generator_TableClassName="PositionsDataTable" msprop:Generator_TableVarName="tablePositions" msprop:Generator_TablePropName="Positions" msprop:Generator_RowDeletingName="PositionsRowDeleting" msprop:Generator_RowChangingName="PositionsRowChanging" msprop:Generator_RowEvHandlerName="PositionsRowChangeEventHandler" msprop:Generator_RowDeletedName="PositionsRowDeleted" msprop:Generator_UserTableName="Positions" msprop:Generator_RowChangedName="PositionsRowChanged" msprop:Generator_RowEvArgName="PositionsRowChangeEvent" msprop:Generator_RowClassName="PositionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RiskLevel" msprop:Generator_ColumnVarNameInTable="columnRiskLevel" msprop:Generator_ColumnPropNameInRow="RiskLevel" msprop:Generator_ColumnPropNameInTable="RiskLevelColumn" msprop:Generator_UserColumnName="RiskLevel">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MinSalary" msprop:Generator_ColumnVarNameInTable="columnMinSalary" msprop:Generator_ColumnPropNameInRow="MinSalary" msprop:Generator_ColumnPropNameInTable="MinSalaryColumn" msprop:Generator_UserColumnName="MinSalary" type="xs:double" />
              <xs:element name="MaxSalary" msprop:Generator_ColumnVarNameInTable="columnMaxSalary" msprop:Generator_ColumnPropNameInRow="MaxSalary" msprop:Generator_ColumnPropNameInTable="MaxSalaryColumn" msprop:Generator_UserColumnName="MaxSalary" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles" msprop:Generator_TablePropName="Roles" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_RowClassName="RolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Transactions" msprop:Generator_TableClassName="TransactionsDataTable" msprop:Generator_TableVarName="tableTransactions" msprop:Generator_TablePropName="Transactions" msprop:Generator_RowDeletingName="TransactionsRowDeleting" msprop:Generator_RowChangingName="TransactionsRowChanging" msprop:Generator_RowEvHandlerName="TransactionsRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionsRowDeleted" msprop:Generator_UserTableName="Transactions" msprop:Generator_RowChangedName="TransactionsRowChanged" msprop:Generator_RowEvArgName="TransactionsRowChangeEvent" msprop:Generator_RowClassName="TransactionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:double" />
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TransactionType_Id" msprop:Generator_ColumnVarNameInTable="columnTransactionType_Id" msprop:Generator_ColumnPropNameInRow="TransactionType_Id" msprop:Generator_ColumnPropNameInTable="TransactionType_IdColumn" msprop:Generator_UserColumnName="TransactionType_Id" type="xs:int" />
              <xs:element name="Employee_Id" msprop:Generator_ColumnVarNameInTable="columnEmployee_Id" msprop:Generator_ColumnPropNameInRow="Employee_Id" msprop:Generator_ColumnPropNameInTable="Employee_IdColumn" msprop:Generator_UserColumnName="Employee_Id" type="xs:int" />
              <xs:element name="Group" msprop:Generator_ColumnVarNameInTable="columnGroup" msprop:Generator_ColumnPropNameInRow="Group" msprop:Generator_ColumnPropNameInTable="GroupColumn" msprop:Generator_UserColumnName="Group">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionTypes" msprop:Generator_TableClassName="TransactionTypesDataTable" msprop:Generator_TableVarName="tableTransactionTypes" msprop:Generator_TablePropName="TransactionTypes" msprop:Generator_RowDeletingName="TransactionTypesRowDeleting" msprop:Generator_RowChangingName="TransactionTypesRowChanging" msprop:Generator_RowEvHandlerName="TransactionTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionTypesRowDeleted" msprop:Generator_UserTableName="TransactionTypes" msprop:Generator_RowChangedName="TransactionTypesRowChanged" msprop:Generator_RowEvArgName="TransactionTypesRowChangeEvent" msprop:Generator_RowClassName="TransactionTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SalaryDependent" msprop:Generator_ColumnVarNameInTable="columnSalaryDependent" msprop:Generator_ColumnPropNameInRow="SalaryDependent" msprop:Generator_ColumnPropNameInTable="SalaryDependentColumn" msprop:Generator_UserColumnName="SalaryDependent">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Status" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_UserColumnName="Status">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="isIncome" msprop:Generator_ColumnVarNameInTable="columnisIncome" msprop:Generator_ColumnPropNameInRow="isIncome" msprop:Generator_ColumnPropNameInTable="isIncomeColumn" msprop:Generator_UserColumnName="isIncome" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserRole" msprop:Generator_TableClassName="UserRoleDataTable" msprop:Generator_TableVarName="tableUserRole" msprop:Generator_TablePropName="UserRole" msprop:Generator_RowDeletingName="UserRoleRowDeleting" msprop:Generator_RowChangingName="UserRoleRowChanging" msprop:Generator_RowEvHandlerName="UserRoleRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRoleRowDeleted" msprop:Generator_UserTableName="UserRole" msprop:Generator_RowChangedName="UserRoleRowChanged" msprop:Generator_RowEvArgName="UserRoleRowChangeEvent" msprop:Generator_RowClassName="UserRoleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserRole_Role_Id" msprop:Generator_ColumnVarNameInTable="columnUserRole_Role_Id" msprop:Generator_ColumnPropNameInRow="UserRole_Role_Id" msprop:Generator_ColumnPropNameInTable="UserRole_Role_IdColumn" msprop:Generator_UserColumnName="UserRole_Role_Id" type="xs:int" />
              <xs:element name="Roles_Id" msprop:Generator_ColumnVarNameInTable="columnRoles_Id" msprop:Generator_ColumnPropNameInRow="Roles_Id" msprop:Generator_ColumnPropNameInTable="Roles_IdColumn" msprop:Generator_UserColumnName="Roles_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_RowClassName="UsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataTableReport" msprop:Generator_TableClassName="DataTableReportDataTable" msprop:Generator_TableVarName="tableDataTableReport" msprop:Generator_RowChangedName="DataTableReportRowChanged" msprop:Generator_TablePropName="DataTableReport" msprop:Generator_RowDeletingName="DataTableReportRowDeleting" msprop:Generator_RowChangingName="DataTableReportRowChanging" msprop:Generator_RowEvHandlerName="DataTableReportRowChangeEventHandler" msprop:Generator_RowDeletedName="DataTableReportRowDeleted" msprop:Generator_RowClassName="DataTableReportRow" msprop:Generator_UserTableName="DataTableReport" msprop:Generator_RowEvArgName="DataTableReportRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Tipo_Transaction" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTipo_Transaction" msprop:Generator_ColumnPropNameInRow="Tipo_Transaction" msprop:Generator_ColumnPropNameInTable="Tipo_TransactionColumn" msprop:Generator_UserColumnName="Tipo_Transaction" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="9" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Empleado" msprop:Generator_ColumnVarNameInTable="columnEmpleado" msprop:Generator_ColumnPropNameInRow="Empleado" msprop:Generator_ColumnPropNameInTable="EmpleadoColumn" msprop:Generator_UserColumnName="Empleado">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Nombre_Transaction" msprop:Generator_ColumnVarNameInTable="columnNombre_Transaction" msprop:Generator_ColumnPropNameInRow="Nombre_Transaction" msprop:Generator_ColumnPropNameInTable="Nombre_TransactionColumn" msprop:Generator_UserColumnName="Nombre_Transaction">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Monto" msprop:Generator_ColumnVarNameInTable="columnMonto" msprop:Generator_ColumnPropNameInRow="Monto" msprop:Generator_ColumnPropNameInTable="MontoColumn" msprop:Generator_UserColumnName="Monto" type="xs:double" />
              <xs:element name="Fecha" msprop:Generator_ColumnVarNameInTable="columnFecha" msprop:Generator_ColumnPropNameInRow="Fecha" msprop:Generator_ColumnPropNameInTable="FechaColumn" msprop:Generator_UserColumnName="Fecha">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Departments" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Employees_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employees" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Payrolls_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Payrolls" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Positions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Positions" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Transactions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Transactions" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="TransactionTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionTypes" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="UserRole_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserRole" />
      <xs:field xpath="mstns:UserRole_Role_Id" />
      <xs:field xpath="mstns:Roles_Id" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DepartmentEmployee" msdata:parent="Departments" msdata:child="Employees" msdata:parentkey="Id" msdata:childkey="Department_Id" msprop:Generator_UserChildTable="Employees" msprop:Generator_ChildPropName="GetEmployeesRows" msprop:Generator_UserRelationName="FK_DepartmentEmployee" msprop:Generator_ParentPropName="DepartmentsRow" msprop:Generator_RelationVarName="relationFK_DepartmentEmployee" msprop:Generator_UserParentTable="Departments" />
      <msdata:Relationship name="FK_EmployeePosition" msdata:parent="Positions" msdata:child="Employees" msdata:parentkey="Id" msdata:childkey="Position_Id" msprop:Generator_UserChildTable="Employees" msprop:Generator_ChildPropName="GetEmployeesRows" msprop:Generator_UserRelationName="FK_EmployeePosition" msprop:Generator_RelationVarName="relationFK_EmployeePosition" msprop:Generator_UserParentTable="Positions" msprop:Generator_ParentPropName="PositionsRow" />
      <msdata:Relationship name="FK_PayrollEmployee" msdata:parent="Payrolls" msdata:child="Employees" msdata:parentkey="Id" msdata:childkey="Payroll_Id" msprop:Generator_UserChildTable="Employees" msprop:Generator_ChildPropName="GetEmployeesRows" msprop:Generator_UserRelationName="FK_PayrollEmployee" msprop:Generator_RelationVarName="relationFK_PayrollEmployee" msprop:Generator_UserParentTable="Payrolls" msprop:Generator_ParentPropName="PayrollsRow" />
      <msdata:Relationship name="FK_TransactionEmployee" msdata:parent="Employees" msdata:child="Transactions" msdata:parentkey="Id" msdata:childkey="Employee_Id" msprop:Generator_UserChildTable="Transactions" msprop:Generator_ChildPropName="GetTransactionsRows" msprop:Generator_UserRelationName="FK_TransactionEmployee" msprop:Generator_ParentPropName="EmployeesRow" msprop:Generator_RelationVarName="relationFK_TransactionEmployee" msprop:Generator_UserParentTable="Employees" />
      <msdata:Relationship name="FK_TransactionTransactionType" msdata:parent="TransactionTypes" msdata:child="Transactions" msdata:parentkey="Id" msdata:childkey="TransactionType_Id" msprop:Generator_UserChildTable="Transactions" msprop:Generator_ChildPropName="GetTransactionsRows" msprop:Generator_UserRelationName="FK_TransactionTransactionType" msprop:Generator_RelationVarName="relationFK_TransactionTransactionType" msprop:Generator_UserParentTable="TransactionTypes" msprop:Generator_ParentPropName="TransactionTypesRow" />
      <msdata:Relationship name="FK_UserRole_Role" msdata:parent="Roles" msdata:child="UserRole" msdata:parentkey="Id" msdata:childkey="Roles_Id" msprop:Generator_UserChildTable="UserRole" msprop:Generator_ChildPropName="GetUserRoleRows" msprop:Generator_UserRelationName="FK_UserRole_Role" msprop:Generator_ParentPropName="RolesRow" msprop:Generator_RelationVarName="relationFK_UserRole_Role" msprop:Generator_UserParentTable="Roles" />
      <msdata:Relationship name="FK_UserRole_User" msdata:parent="Users" msdata:child="UserRole" msdata:parentkey="Id" msdata:childkey="UserRole_Role_Id" msprop:Generator_UserChildTable="UserRole" msprop:Generator_ChildPropName="GetUserRoleRows" msprop:Generator_UserRelationName="FK_UserRole_User" msprop:Generator_RelationVarName="relationFK_UserRole_User" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>